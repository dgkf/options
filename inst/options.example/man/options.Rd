% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roxygen2.R
\name{options}
\alias{options}
\title{options.example Options}
\description{
Internally used, package-specific options. All options will prioritize R options() values, and fall back to environment variables if undefined. If neither the option nor the environment variable is set, a default value is used.
}
\section{Checking Option Values}{

Option values specific to \code{options.example} can be
accessed by passing the package name to \code{env}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{options::opts(env = "options.example")

options::opt(x, default, env = "options.example")
}\if{html}{\out{</div>}}
}

\section{Options}{

\describe{
\item{detailed}{\describe{
An example of a more detailed mechanism of defining options, which gives further control over option names, environment variable names and how environment variables are internalized as values.\item{default: }{\preformatted{FALSE}}
\item{option: }{options.example.detailed}
\item{envvar: }{r_options_example_detailed (TRUE if set, FALSE otherwise)}
}}

\item{use_options}{\describe{
Define options within your package. Using \code{define} shorthand syntax
will auto-generate global R option names and environment variables names to
fall back to.\item{default: }{\preformatted{TRUE}}
\item{option: }{options.example.use_options}
\item{envvar: }{r_options_example_use_options (evaluated if possible, raw string otherwise)}
}}

\item{another_option}{\describe{
Additional options can be chained together. They're also only evaluated
on first use, so you're free to use package functions without worrying about
order of execution.\item{default: }{\preformatted{fizzbuzz(1:15)}}
\item{option: }{options.example.another_option}
\item{envvar: }{r_options_example_another_option (evaluated if possible, raw string otherwise)}
}}

\item{quiet}{\describe{
Whether printing should be quiet or loud. See how it's used throughout this
package!\item{default: }{\preformatted{TRUE}}
\item{option: }{options.example.quiet}
\item{envvar: }{r_options_example_quiet (evaluated if possible, raw string otherwise)}
}}

}
}

\seealso{
options getOption Sys.getenv Sys.getenv
}
